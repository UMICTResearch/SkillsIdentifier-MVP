{"version":3,"sources":["../../src/pages/skills/skills.module.ts","../../src/pages/skills/skills.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SkillsPage } from './skills';\n\n@NgModule({\n  declarations: [\n    SkillsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SkillsPage),\n  ],\n})\nexport class SkillsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/skills/skills.module.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NavController, NavParams, LoadingController, AlertController, IonicPage, ModalController } from 'ionic-angular';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { HomePage } from '../../pages/home/home';\nimport { JobDataProvider } from '../../providers/job-data/job-data';\nimport { FootbarComponent } from '../../components/footbar/footbar';\nimport { jobInformation, skillInformation } from '../../assets/data/dataModel';\n\n\n@IonicPage({\n\tname: \"skills\",\n\tsegment: \"skills\"\n})\n@Component({\n  selector: 'page-skills',\n  templateUrl: 'skills.html'\n})\n\nexport class SkillsPage {\n\n\tpreview: any;\n\n\tcurrentJob = [ {'title': '', 'uuid': '', 'parent_uuid': ''},  {'title': '', 'uuid': '', 'parent_uuid': ''}, {'title': '', 'uuid': '', 'parent_uuid': ''}, {'title': '', 'uuid': '', 'parent_uuid': ''}, {'title': '', 'uuid': '', 'parent_uuid': ''}, {'title': '', 'uuid': '', 'parent_uuid': ''} ];\n\tdreamJob = {'title': '', 'uuid': '', 'parent_uuid': ''};\n\n\tskillsRequired: skillInformation[] = [];\n\tskillsRequiredTitles: string[] = [];\n\tabilitiesRequired: skillInformation[] = [];\n\tknowledgeRequired: skillInformation[] = [];\n\n\tskillsPossessed: any = [[], [], [], []];\n\t\n\tskillsSelected: skillInformation[] = [];\n\tskillsSelectedLength: number = 0;\n\tskillsNeededLength: number;\n  // resume lines need to be stored as objects; there are issues with strings being a primitive.\n\tresumeTemplate: any = [];\n\tresumeIntro: string = \"<Enter your full name here>\\n<Enter your phone number here>\\n<Enter your email here>\"\n\n\temailForm: FormGroup;\n\temailAddress: string = '';\n\n\tloading = this._loadingCtrl.create({\n\t\t\tspinner: 'dots'\n\t\t})\n\n\tconstructor(public navCtrl: NavController,\n\t\t\t\tprivate _loadingCtrl: LoadingController,\n\t\t\t\tprivate _alertCtrl: AlertController,\n\t\t\t\tpublic navParams: NavParams,\n\t\t\t\tprivate _jobDataProvider: JobDataProvider,\n\t\t\t\tprivate _modalCtrl: ModalController) {\n\n\t\tthis.currentJob = this._jobDataProvider.currentJob;\n\t\tthis.dreamJob   = this._jobDataProvider.dreamJob;\n\n\t\t// this.openModal();\n\t}\n\n\tngOnInit(){\n\n\t\tthis.loading.present();\n\t\tif (this.dreamJob.title != '') {\n\t\t\t\n\t\t\tthis.identifyRequiredSkills()\n\n\t\t\tthis.loading.dismiss();\n\n\t\t}  else {\n\t\t\tthis.loading.dismiss();\n\t\t\tthis.navCtrl.push(\"home\")\n\t\t}\n\t\t// console.log(\"skills required:\", this.skillsRequired)\n\t\t// console.log(\"skills possessed:\", this.skillsPossessed)\n\t}\n\n\tngOnDestroy(){\n\t\tthis.loading.dismiss();\n\t}\n\n\tpopView(){\n\t\tthis.navCtrl.pop();\n\t}\n\n\t// gets the most important skills for the target job from the Data@Work API\n\tidentifyRequiredSkills() {\n\t\t// get skills for the target (dream) job and record the top ten skills\n\t\tthis._jobDataProvider.getSkillset(this.dreamJob.uuid)\n\t\t\t\t\t\t.subscribe(res => {\n\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\tthis.skillsRequired = [];\n\t\t\t\t\t\t\tlet j = 0;\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\twhile ( j < 10 && i < 100 ) {\n\t\t\t\t\t\t\t\tif (res.skills[i].skill_type == \"skill\") {\n\t\t\t\t\t\t\t\t\tthis.skillsRequired.push(res.skills[i])\n\t\t\t\t\t\t\t\t\tthis.skillsRequiredTitles.push(res.skills[i].skill_name)\n\t\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.identifyRelevantSkills()\n\t\t\t\t\t\t})\n\t}\n\n\t// reviews the skills for each past job using the Data@Work API and identifies\n\t//  skills that are relevant to the target job\n\tidentifyRelevantSkills() {\n\t\tconsole.log(this.skillsRequired)\n\t\tconsole.log(\"CURRENT JOB\", this.currentJob);\n\t\t// get skills for each past job and record the top 5 for each in the \"skillsPossessed\" array\n\n\t\tthis.currentJob.forEach((job, index) =>{\n\n\t\t\tif (job.title != '') {\n\t\t\t\tconsole.log(\"Index = \" + index)\n\t\t\t\tthis._jobDataProvider.getSkillset(job.uuid)\n\t\t\t\t\t.subscribe(res => {\n\t\t\t\t\t\tconsole.log(\"skill response for \" + job.title);\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t// this.skillsPossessed[index] = [];\n\t\t\t\t\t\tvar k = 0;\n\t\t\t\t\t\tvar max = 3;\n\t\t\t\t\t\t// include only skills that are also relevant for the target job\n\t\t\t\t\t\tfor (var i = 0; i < 30; i++) {\n\t\t\t\t\t\t\tif (k < max && this.skillsRequiredTitles.includes(res.skills[i].skill_name)) {\n\t\t\t\t\t\t\t\tthis.skillsPossessed[index].push(res.skills[i]);\n\t\t\t\t\t\t\t\tconsole.log(\"ADDED: \" + res.skills[i].skill_name);\n\t\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t} else if (k < max) {\n\t\t\t\t\t\t\t\tconsole.log(\"NOT REQUIRED: \" + res.skills[i].skill_name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if we found any relevant skills for this job, include it in the resume\n\t\t\t\t\t\tif (k > 0) {\n\t\t\t\t\t\t\tthis.createResumeEntry(index)\n\t\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t\n\t}\n\n\tcreateResumeEntry(idx: number) {\n\t\tlet index = idx;\n\t\tlet job = this.currentJob[index];\n\t\tif (this.skillsPossessed[index] != []) {\n\t\t\tthis.resumeTemplate[index] = { value: job.title + \"\\n\" };\n\t\t\tfor (let skill of this.skillsPossessed[index]) {\n\t\t\t\tthis.resumeTemplate[index].value = this.resumeTemplate[index].value + '- ' + skill.skill_name + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tconsole.log(this.resumeTemplate[index].value)\n\n\t}\n\n\t// copy the resume to the clipboard\n\tcopyResume(){\n\t    let selBox = document.createElement('textarea');\n\t    selBox.style.position = 'fixed';\n\t    selBox.style.left = '0';\n\t    selBox.style.top = '0';\n\t    selBox.style.opacity = '0';\n\n\t    let fullResume = this.resumeIntro + \"\\n\\n\";\n\t    for (let entry of this.resumeTemplate) {\n\t    \tfullResume = fullResume + entry.value + \"\\n\";\n\t    }\n\t    selBox.value = fullResume;\n\t    document.body.appendChild(selBox);\n\t    selBox.focus();\n\t    selBox.select();\n\t    document.execCommand('copy');\n\t    document.body.removeChild(selBox);\n\n\t    this.presentAlert();\n\n  \t}\t\n\n  \tpresentAlert() {\n\t  let alert = this._alertCtrl.create({\n\t    title: 'Congratulations!',\n\t    subTitle: 'Your new resume is copied',\n\t    buttons: ['Dismiss']\n\t  });\n\t  console.log(\"alert\")\n\t  alert.present();\n\t}\n\t\n\t// emails the edited resume to the user\n\t// sendEmail() {\n\t// \tlet fullResume = ''\n\t// \tfor (let entry of this.resumeTemplate) {\n\t// \t\tfullResume = fullResume + entry + '\\n';\n\t// \t}\n\t// \tlet email = {\n\t// \tto: this.emailAddress,\n\t// \tcc: '',\n\t// \tbcc: '',\n\t// \tattachments: [\n\t\t\n\t// \t],\n\t// \tsubject: 'Your SkillsIdentifier Resume Template',\n\t// \tbody: fullResume,\n\t// \tisHtml: true\n\t// \t};\n\n\t// \t// this.emailComposer.isAvailable().then((available: boolean) =>{\n\t// \t// \tif(available) {\n\t// \t// \t//Now we know we can send\n\t// \t// \t}\n\t// \t// });\n\n\t// \tconsole.log(this.emailAddress)\n\t// \tconsole.log(fullResume)\n\t// }\n\n\t// sets up the pdf resume\n\t// downloadPdf(){\n\n\t// \tlet lines = []\n\t// \tconsole.log(this.skillsRequired);\n\t// \tlines.push(\"The six most important skills for \" + this.dreamJob.title + \" are:\");\n\t// \tfor (var i = 0; i < 6; i++) {\n\t// \t\tlines.push(this.skillsRequired[i].skill_name);\n\t// \t}\n\t// \tlines.push(\"\");\n\t// \tfor (let index in this.currentJob) {\n\t// \t\tlet job = this.currentJob[index];\n\t// \t\tlines.push(job.title)\n\t// \t\tfor (let skill of this.skillsPossessed[index]) {\n\t// \t\t\tlines.push(skill.skill_name + \": \" + skill.description);\n\t// \t\t}\n\t// \t}\n\n\t// \tthis.resume.text(lines, 10, 10);\n\t\t\n\t// \tthis.resume.save(\"resume.pdf\");\n\n\t// \t// this.resume.output('datauri')\n\t// \t// console.log(this.preview)\n\n\t// \t// let iframe = document.getElementById(\"pdfPreview\")\n\t// \t// console.log(iframe);\n\n\t// \t// iframe.attr('src', this.resume.output('datauri'));\n\t// }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/skills/skills.ts"],"sourceRoot":""}